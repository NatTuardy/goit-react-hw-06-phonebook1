{"version":3,"sources":["redux/types.js","redux/reducer.js","redux/store.js","components/inputField/InputField.jsx","fields/fields.js","components/contactForm/ContactForm.jsx","components/contactList/contactItem/ContactItem.jsx","components/contactList/ContactList.jsx","components/filter/Filter.jsx","App.js","redux/actions.js","index.js"],"names":["types","ADD_TO_CONTACTS","REMOVE_FROM_CONTACTS","UPDATE_FILTER","initialStore","contacts","items","filter","reducer","store","action","type","ADD_TO_C0NTACTS","newContact","payload","newContacts","updateContacts","item","id","persistConfig","key","storage","persistedReducer","persistReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","InputField","props","data","className","label","htmlFor","list","name","pattern","title","required","ContactForm","onSubmit","useState","setName","number","setNumber","e","preventDefault","generate","value","onChange","target","ContactItem","onDelete","contactsList","map","onClick","ContactList","Filter","App","contactsItems","useSelector","filterString","dispatch","useDispatch","newBook","findDoubleContact","find","contact","alert","console","log","toLowerCase","includes","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.549a742d.chunk.js","sourcesContent":["const types = {\r\n  ADD_TO_CONTACTS: \"contacts/add\",\r\n  REMOVE_FROM_CONTACTS: \"contacts/remove\",\r\n  UPDATE_FILTER: \"filter/update\",\r\n};\r\n\r\nexport default types;\r\n","import { nanoid } from \"nanoid\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport types from \"./types\";\r\n\r\nconst initialStore = {\r\n  contacts: {\r\n    items: [],\r\n    filter: \"\",\r\n  },\r\n};\r\n\r\nconst reducer = (store = { ...initialStore }, action) => {\r\n  //   switch (action.type) {\r\n  //     case types.ADD_TO_CONTACTS:\r\n  //       const newContact = { ...action.payload };\r\n  //       const newContacts = [...store.contacts.items, newContact];\r\n  //       return { ...store.contacts, items: newContacts };\r\n  //     default:\r\n  //       return store;\r\n  //   }\r\n\r\n  switch (action.type) {\r\n    case types.ADD_TO_C0NTACTS:\r\n      const newContact = { ...action.payload };\r\n      const newContacts = [...store.contacts.items, newContact];\r\n      return { contacts: { ...store.contacts, items: newContacts } };\r\n\r\n    case types.REMOVE_FROM_CONTACTS:\r\n      const updateContacts = store.contacts.items.filter(\r\n        (item) => item.id !== action.payload\r\n      );\r\n      return { contacts: { ...store.contacts, items: updateContacts } };\r\n\r\n    case types.UPDATE_FILTER:\r\n      return { contacts:{...store.contacts, filter: action.payload} };\r\n\r\n    default:\r\n      return store;\r\n  }\r\n};\r\n\r\n// const contactsReducer = (state = [], action) => {\r\n//   switch (action.type) {\r\n//     case types.ADD_TO_C0NTACTS:\r\n//       return [...state, action.payload];\r\n\r\n//     case types.REMOVE_FROM_CONTACTS:\r\n//       return state.filter((item) => item.id !== action.payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// const filterReducer = (state = \"\", action) => {\r\n//   switch (action.type) {\r\n//     case types.UPDATE_FILTER:\r\n//       return action.payload;\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\n// export default combineReducers({\r\n//   items: contactsReducer,\r\n//   filter: filterReducer,\r\n// });\r\n\r\nexport default reducer;\r\n","import {  createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n  }\r\n\r\nconst persistedReducer = persistReducer(persistConfig, reducer)\r\n\r\nexport const store = createStore(persistedReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\nexport const persistor = persistStore(store);\r\n","import PropTypes from 'prop-types'\r\n\r\nconst InputField = (props) => {\r\n    const data = { ...props};\r\n    return (\r\n        <div className=\"mb-3\">\r\n            {data.label && <label htmlFor={data.id} className=\"form-label\">{data.label }</label>}\r\n            <input {...data}  />\r\n        </div>        \r\n    )\r\n};\r\n\r\nexport default InputField;\r\n\r\nInputField.propTypes = {\r\n    props: PropTypes.object,\r\n  }","export const list = {\r\n    name: {\r\n      name: \"name\",\r\n      type: \"text\",\r\n      className:\"form-control\",\r\n      id:\"inputName\",\r\n      // ariaDescribedby:\"nameHelp\",\r\n      pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\r\n      title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n      required: true,\r\n      label: \"Name\",\r\n    },\r\n    number: {\r\n      name: \"number\",\r\n      type: \"tel\",\r\n      className:\"form-control\",\r\n      id: \"inputTelephone\",\r\n      pattern: \"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\",\r\n      title:\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n      required: true,\r\n      label: \"Number\"\r\n    },\r\n  };","import { useState } from \"react\";\r\nimport { generate } from \"shortid\";\r\nimport PropTypes from \"prop-types\";\r\nimport InputField from \"../inputField/InputField\";\r\nimport { list } from \"../../fields/fields\";\r\n\r\nconst ContactForm = ({ onSubmit }) => {\r\n  const [name, setName] = useState('')\r\n  const [number, setNumber] = useState('')\r\n\r\n  const handleChangeName = ({ target }) => {\r\n       setName(target.value)\r\n  };\r\n\r\n  const handleChangeNumber = ({ target }) => {\r\n      setNumber(target.value)\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = generate();\r\n    const newContact = { id, name, number };\r\n    onSubmit(newContact);\r\n    setName('')\r\n    setNumber('')\r\n\r\n  };\r\n  \r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit} className=\"form-control mb-3\">\r\n        <InputField {...list.name} value={name} onChange={handleChangeName} />\r\n        <InputField {...list.number} value={number} onChange={handleChangeNumber} />\r\n        <div className=\"col-12\">\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Add contact\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types'\r\n\r\nconst ContactItem = ({ data = [], onDelete }) => {\r\n  const contactsList = data.map(({ name, id, number }) => (\r\n        <li\r\n          key={id}\r\n          className=\"list-group-item d-flex justify-content-between align-items-start \"\r\n        >\r\n          {name}: {number}\r\n          <button\r\n            onClick={() => onDelete(id)}\r\n            type=\"submit\"\r\n            className=\"btn btn-primary align-items-end btn-sm\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n  ));\r\n  return <>{contactsList}</>;\r\n};\r\n\r\nexport default ContactItem;\r\n\r\nContactItem.propTypes = {\r\n  data: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      id: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func.isRequired,\r\n}\r\n","import ContactItem from \"./contactItem/ContactItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ data, onDelete }) => {\r\n  return (\r\n    <>\r\n      <h1>Contacts</h1>\r\n      <ul className=\"list-group d-grid gap-2 d-md-flex justify-content-center\">\r\n        <ContactItem data={data} onDelete={onDelete} />\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n\r\nContactList.propTypes = {\r\n  data: PropTypes.array.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types'\r\n\r\nconst Filter = ({ onChange, filter }) => {\r\n  return (\r\n    <>\r\n      <h2>Find contacts by name:</h2>\r\n      <div className=\"form-control col-md-6\">\r\n        <input\r\n          className=\"form-control col-md-3\"\r\n          onChange={onChange}\r\n          name=\"filter\"\r\n          value={filter}\r\n          type=\"text\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func.isRequired,\r\n}","import { useSelector, useDispatch } from \"react-redux\";\n\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\n\nimport { addToContacts, removeFromContacts,updateFilter } from \"./redux/actions\";\nimport \"./App.css\";\n\nconst App = () => {\n  const contactsItems = useSelector((store) => store.contacts.items);\n  const filterString = useSelector((store) => store.contacts.filter);\n\n  const dispatch = useDispatch();\n\n  const handleFilter = () => {\n    const filteredContacts = contactsItems.filter((item) =>\n      item.name.toLowerCase().includes(filterString.toLowerCase())\n    );\n    return filteredContacts;\n  };\n\n  const handleChange = ({ target }) => {\n    const { value} = target;\n    dispatch(updateFilter(value))\n  };\n\n  const handleSubmit = (newContact) => {\n    const findDoubleContact = contactsItems.find(\n      (contact) => contact.name === newContact.name\n    );\n    if (findDoubleContact) {\n      alert(`${findDoubleContact.name} is already in contacts`);\n    } else {\n      const action = addToContacts(newContact);\n      dispatch(action);\n    }\n  };\n\n  const handleDelete = (id) => {\n    dispatch(removeFromContacts(id));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App-header\">Phonebook</h1>\n      <ContactForm onSubmit={handleSubmit} />\n      <Filter onChange={handleChange} data={contactsItems} filter={filterString} />\n      <ContactList data={handleFilter()} onDelete={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import types from \"./types\";\r\n\r\nexport const addToContacts = (newBook) => {\r\n  console.log(\"newBook\", newBook);\r\n  return {\r\n    type: types.ADD_TO_CONTACTS,\r\n    payload: newBook,\r\n  };\r\n};\r\n\r\nexport const removeFromContacts = (payload) => {\r\n  return {\r\n    type: types.REMOVE_FROM_CONTACTS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const updateFilter = (payload) => {\r\n  return {\r\n    type: types.UPDATE_FILTER,\r\n    payload,\r\n  };\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {store, persistor} from \"./redux/store\";\n\nimport App from './App';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n       <App />\n       </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}